GCE with CoreOS:

1. Create coreos/cloud-config.yml with auth token from https://discovery.etcd.io/new
2. Modify and run ./boot script
3. gcloud compute ssh <instance name>
4. fleetctl list-machines

Example: ElasticSearch cluster on CoreOS
 - source: http://mattupstate.com/coreos/devops/2014/06/26/running-an-elasticsearch-cluster-on-coreos.html

GCE without CoreOS:

1. Setup GCE project - https://cloud.google.com/compute
2. gcloud auth login
3. Install gcloud compute
  # setup google cloud sdk
  curl https://sdk.cloud.google.com | bash
  # activate google cloud in current shell
  source ~/.bash_profile
  # login
  gcloud auth login --no-launch-browser
  # set defaults;
  gcloud config set project <project ID (not project name)>
  gcloud config set compute/region europe-west1
  gcloud config set compute/zone europe-west1-a
  gcloud config list # to verify the values are set

Flocker:

sudo apt-get install gcc python2.7 python-virtualenv python2.7-dev

sh install-flocker.sh

mkdir flocker-mongodb
cd flocker-mongodb
curl -O https://docs.clusterhq.com/en/latest/_downloads/Vagrantfile
vagrant up

ssh-add
ssh-add ~/.vagrant.d/insecure_private_key

sudo apt-get install mongodb-clients


Flocker on CentOS:

vagrant box add centos65-x86_64-20140116 https://github.com/2creatives/vagrant-centos/releases/download/v6.5.3/centos65-x86_64-20140116.box


++++++++

+ service for deployment.yml
+ web ui for deployment.yml


